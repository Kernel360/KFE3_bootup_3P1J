# [타입] <제목> #이슈 번호 - 제목을 "<타입> <제목> (#이슈 번호)" 형식으로 작성

# 변경된 "내용"을 명확히 설명 / 마침표로 끝내지 마세요
# 예시 - [settings] eslint, prettier, lefthook 설정 #1


# 본문을 아래에 작성하세요

# 여러 줄을 구분할 때는 "-"를 사용하세요
# - login.tsx 파일이 수정되었습니다.

# --- COMMIT END ---  
#   <타입> 리스트  
#   feat        : 기능 (새로운 기능)  
#   fix         : 코드 수정
#   bugfix      : 버그 수정  
#   refactor    : 리팩토링  
#   design      : CSS 등 사용자 UI 디자인 변경     
#   docs        : 문서 수정 (문서 추가, 수정, 삭제, README)  
#   test        : 테스트 (테스트 코드 추가, 수정, 삭제: 비즈니스 로직에 변경 없음)  
#   settings    : 프로젝트 세팅 관련, 패키지 매니저 수정, 그 외 기타 수정 ex) .gitignore
#   init        : 초기 생성  
#   rename      : 파일 혹은 폴더명을 수정하거나 옮기는 작업만 한 경우  
#   remove      : 파일을 삭제하는 작업만 수행한 경우
# ------------------
#   제목은 소문자로 시작
#   제목은 명령형으로 작성
#   제목 끝에 마침표를 넣지 마세요
#   제목과 본문 사이에 빈 줄을 남기세요
#   본문은 "어떻게"보다는 "무엇을", "왜"를 설명해야 합니다
#   본문의 여러 줄을 구분할 때는 "-"를 사용하세요
#   설정 명령어:
#   git config --local commit.template ./.github/.gitmessage.txt
# ------------------